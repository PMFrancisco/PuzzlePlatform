const colLevel1 = [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 292, 292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
  292, 292, 292, 0, 0, 292, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 292, 0, 0, 292,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 292, 0, 0, 292, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 292, 0, 0, 292, 292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
  292, 292, 292, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
];

const colLevel2 = [
  292, 292, 292, 292, 292, 292, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 292, 0, 0, 0, 0,
  292, 0, 0, 292, 292, 292, 292, 292, 292, 292, 0, 292, 0, 0, 0, 0, 292, 0, 0,
  292, 0, 0, 0, 0, 0, 292, 0, 292, 292, 292, 0, 0, 292, 0, 0, 292, 0, 0, 0, 0,
  0, 292, 0, 292, 292, 292, 0, 0, 292, 0, 0, 292, 0, 0, 292, 292, 292, 292, 0,
  292, 0, 0, 0, 0, 292, 0, 0, 292, 0, 0, 0, 0, 0, 292, 0, 292, 0, 292, 292, 292,
  292, 292, 292, 292, 0, 0, 0, 0, 0, 292, 0, 292, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 292, 0, 292, 292, 292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
  292, 292, 292, 0,
];

class Wall {
  constructor(x, y, w, h) {
    this.x = x;
    this.y = y;
    this.w = w;
    this.h = h;
  }
  draw() {
/*     fill(255, 0, 0, 0.5);
    rect(this.x, this.y, this.w, this.h); */
  }
}

function initBlocks(colData) {
  const numRows = 9;
  const numCols = 16;
  const blocks = [];

  for (let i = 0; i < numRows; i++) {
    const rows = colData.slice(i * numCols, (i + 1) * numCols);
    rows.forEach((block, xIndex) => {
      if (block === 292) {
        blocks.push(new Wall(xIndex * 64, i * 64, 64, 64));
      }
    });
  }

  return blocks;
}
